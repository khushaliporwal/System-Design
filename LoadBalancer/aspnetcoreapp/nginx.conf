worker_processes  1;

events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    keepalive_timeout  65;

    # Define upstream servers for load balancing
    upstream backend {
        server localhost:5000;
        server localhost:5062;
        server localhost:5064;
        # Add more servers as needed
        # server ip_or_hostname:port;
    }

    server {
        listen       8080;
        server_name  localhost;

        location / {
            proxy_pass http://backend;  # Forward requests to the 'backend' upstream group
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Optional: Load balancing method
            # You can choose different load balancing methods like 'round-robin', 'least_conn', etc.
            # For example, to use round-robin (default if not specified):
            # proxy_balancer_by_request $request_method;
            # proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
            # proxy_redirect off;
        }

        # Error pages
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }

    # HTTPS server configuration (if needed)
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}
}
